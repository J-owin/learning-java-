import javax.sound.sampled.*;
import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Scanner;

public class AlarmClock implements Runnable {
    private final LocalDateTime alarmDateTime;
    private final String filePath;
    private final Scanner scanner;

    public AlarmClock(LocalTime alarmTime,String filePath,Scanner scanner) {
        this.filePath=filePath;
        LocalDateTime now = LocalDateTime.now();
        LocalDateTime tempAlarm = now.with(alarmTime);
        this.scanner=scanner;

        if (tempAlarm.isBefore(now)) {
            tempAlarm = tempAlarm.plusDays(1);
        }

        this.alarmDateTime = tempAlarm;
    }

    @Override
    public void run() {
        while (LocalDateTime.now().isBefore(alarmDateTime)) {
            LocalDateTime now = LocalDateTime.now();
            System.out.printf("\rCurrent time: %02d:%02d:%02d" , now.getHour(),now.getMinute(),now.getSecond());
            try {
                Thread.sleep(1000);
            }
            catch (InterruptedException e) {
                System.out.println("Thread was interrupted");
            }
        }
        System.out.println("\n⏰ WAKE UP! It’s " + alarmDateTime.toLocalTime());
        sound(filePath);


    }
    private void sound(String filePath){
        File audio = new File(filePath);

        try(AudioInputStream audiostream = AudioSystem.getAudioInputStream(audio)){
            Clip clip = AudioSystem.getClip();
            clip.open(audiostream);
            clip.start();
            System.out.println("Click ENTER to stop the alarm! ");
            scanner.nextLine();
            clip.stop();

            scanner.close();
        }
        catch (UnsupportedAudioFileException e){
            System.out.println("Audio file format not supported ");

        }
        catch(LineUnavailableException e){
            System.out.println("Audio is unavailable ");

        }
        catch(IOException e){
            System.out.println("Error reading audio file");
        }



    }
}
